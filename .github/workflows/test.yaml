name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 22
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '22'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run tests with Gradle
        run: ./gradlew test --no-daemon

      - name: Generate JaCoCo report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html

      - name: Download JaCoCo Badge Generator
        run: wget https://github.com/cicirello/jacoco-badge-generator/releases/download/v1.0.3/jacoco-badge-generator-1.0.3.zip && unzip jacoco-badge-generator-1.0.3.zip

      - name: Generate JaCoCo Badge
        run: |
          java -jar jacoco-badge-generator-1.0.3.jar \
            --reportPath build/reports/jacoco/test/html/index.html \
            --badgeOutputPath badge.svg

      - name: Upload JaCoCo Badge
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-badge
          path: badge.svg

      - name: Check JaCoCo Coverage Percentage
        id: coverage
        run: |
          COVERAGE=$(grep -oP 'class="ctr2">[^<]+' build/reports/jacoco/test/html/index.html | tail -1 | grep -oP '[0-9]+')
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

      - name: Fail if Coverage is Below Threshold
        run: |
          if [ $COVERAGE -lt 80 ]; then
            echo "Code coverage ($COVERAGE%) is below the acceptable threshold (80%)."
            exit 1
          fi
